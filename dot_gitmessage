

# feat: A new feature
# fix: A bug fix
# docs: Documentation only changes
# chore: Changes to the build process or auxiliary tools
#        and libraries such as documentation generation.
# style: Changes that do not affect the meaning of the code
#        (white-space, formatting, missing semi-colons, etc.)
# refactor: A code change that neither fixes a bug or adds a feature
# perf: A code change that improves performance
# test: Adding missing tests
# add ! to the type to indicate breaking changes. E.g. fix! or feat!



# Whatever you place as a commit message, always
# Read it as: If applied, this commit will <commit message here>.
# [Add/Fix/Remove/Update/Refactor/Document] [issue #id] [summary]

# Why is it necessary? (Bug fix, feature, improvements?)
# -
# How does it address the problem?
# -
# What side effects does this change have?
# -
# Include a link to the ticket, if any.
#
# Add co-authors if you worked on this code with others:
#
# Co-authored-by: Full Name <email@example.com>
# Co-authored-by: Full Name <email@example.com>
